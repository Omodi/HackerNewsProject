name: CI - Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    name: Backend Tests (.NET)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run Unit Tests
      run: dotnet test HackerNewsApi.UnitTests --no-build --configuration Release --logger trx --collect:"XPlat Code Coverage"
    
    - name: Run Integration Tests
      run: dotnet test HackerNewsApi.IntegrationTests --no-build --configuration Release --logger trx --collect:"XPlat Code Coverage"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backend-test-results
        path: "**/*.trx"
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backend-coverage
        path: "**/coverage.cobertura.xml"

  test-frontend:
    name: Frontend Tests (Angular)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'hackernews-frontend/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd hackernews-frontend
        npm ci
    
    - name: Run tests
      run: |
        cd hackernews-frontend
        npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-test-results
        path: "hackernews-frontend/coverage/"

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: always()
    
    steps:
    - name: Test Results Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Backend Tests | ${{ needs.test-backend.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend Tests | ${{ needs.test-frontend.result }} |" >> $GITHUB_STEP_SUMMARY